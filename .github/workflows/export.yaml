name: Build & Export

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: {}

env:
  CI_TRIGGER_REASON: ${{ github.event_name }}

jobs:
  export:
    name: Export map tiles
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set ENV variables (Aurora helper)
        run: bash dependencies.sh

      # BYOND on Linux needs 32-bit libs; mirror their CI
      - name: Prepare OS Environment
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y gcc-multilib zlib1g-dev:i386 libssl-dev:i386 libgcc-s1:i386 libc6:i386

      - name: Install BYOND (Aurora helper)
        run: |
          bash tools/ci/install_byond.sh
          source $HOME/BYOND/byond/bin/byondsetup
          which DreamMaker
          which DreamDaemon

      # Write our exporter toggles; _defines.dm is included by map_exporter.dm
      - name: Enable exporter defines (autorun + commit)
        shell: bash
        run: |
          mkdir -p tools/exporter
          {
            echo "#define MAP_EXPORTER 1"
            echo "#define MAP_EXPORT_AUTORUN 1"
            echo "#define MAP_EXPORT_COMMIT \"${GITHUB_SHA}\""
            # echo "#define MAP_EXPORT_INCLUDE_LIGHTING 1"   # uncomment if you want lighting on
            # echo "#define MAP_EXPORT_OUTDIR \"data/exports/tiles\""
          } > tools/exporter/_defines.dm
          echo "==== tools/exporter/_defines.dm ===="
          cat tools/exporter/_defines.dm

      # Compile using Auroraâ€™s wrapper (captures logs & exit codes)
      - name: Compile DM (scripts/dm.sh)
        env:
          # add any extra DMFLAGS here; scripts/dm.sh passes -D flags through
          DMFLAGS: "-DMAP_EXPORTER -DMAP_EXPORT_AUTORUN -DMAP_EXPORT_COMMIT=\\\"${{ github.sha }}\\\""
        run: |
          set -eux
          source $HOME/BYOND/byond/bin/byondsetup
          # scripts/dm.sh usage in their CI: scripts/dm.sh [flags] [-Mmap] aurorastation.dme
          # We just need a plain compile with our defines:
          scripts/dm.sh $DMFLAGS aurorastation.dme
          # Confirm it produced a DMB and the build log looks sane
          ls -la *.dmb || ls -la **/*.dmb
          test -f build_log.txt && tail -n +1 build_log.txt | sed -n '1,120p'

      # Launch DreamDaemon; exporter autoruns then shutdown()
      - name: Run DreamDaemon to generate exports
        run: |
          set -eux
          source $HOME/BYOND/byond/bin/byondsetup
          DMB="$(ls -1 *.dmb 2>/dev/null || true)"
          if [ -z "$DMB" ]; then
            DMB="$(ls -1 **/*.dmb 2>/dev/null | head -n1 || true)"
          fi
          if [ -z "$DMB" ]; then
            echo "No .dmb produced"; exit 1
          fi
          echo "Using DMB: $DMB"
          # -close returns when world exits; our exporter calls shutdown() at end
          DreamDaemon "$DMB" -invisible -trusted -close &
          # Wait (up to ~2 min) for exporter to write files
          for i in {1..24}; do
            [ -d data/exports ] && break
            sleep 5
          done
          sleep 3
          pgrep -f DreamDaemon && pkill -f DreamDaemon || true

      - name: List exports
        run: |
          if [ -d data/exports ]; then
            find data/exports -maxdepth 3 -type f | sort
          else
            echo "No exports found in data/exports"; exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aurora-exports-${{ github.sha }}
          path: data/exports/**
          if-no-files-found: error
