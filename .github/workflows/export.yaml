name: Build & Export (SpacemanDMM + 512 tiles)

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: {}

env:
  MAP_GLOB: _maps/**/*sccv_horizon*.dmm
  OUT_DIR: data/minimaps
  TILE_DIR: data/tiles
  TILE: 512

jobs:
  export:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build SpacemanDMM
        run: |
          set -eux
          git clone --depth=1 https://github.com/SpaceManiac/SpacemanDMM /tmp/SpacemanDMM
          cd /tmp/SpacemanDMM && cargo build --release --bin dmm-tools
          echo "/tmp/SpacemanDMM/target/release" >> $GITHUB_PATH
          dmm-tools --help | head -n 1

      - name: Render minimaps (one PNG per Z)
        run: |
          set -euxo pipefail
          mkdir -p "$OUT_DIR"
          shopt -s nullglob
          count=0
          for m in $MAP_GLOB; do
            echo "Rendering $m"
            dmm-tools minimap "$m" -o "$OUT_DIR"
            count=$((count+1))
          done
          [ "$count" -gt 0 ] || (echo "No .dmm maps matched MAP_GLOB=$MAP_GLOB" && exit 1)
          ls -lh "$OUT_DIR"

      - name: Install ImageMagick (IM6)
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick
          /usr/bin/convert -version

      - name: Slice to ${TILE}x${TILE} tiles (top-left origin, row,col.png)
        run: |
          set -euxo pipefail
          mkdir -p "$TILE_DIR"
          shopt -s nullglob
          for png in "$OUT_DIR"/*.png; do
            base=$(basename "$png")
            z="${base%.*}"; z="${z##*-}"     # e.g. YourMap-3.png -> 3
            out="$TILE_DIR/z${z}"
            mkdir -p "$out"

            # Crop into tiles; name as row,col.png with top-left origin.
            # Preserve RGBA; pad edge tiles to exactly TILEÃ—TILE with transparent pixels.
            /usr/bin/convert "$png" \
              -colorspace sRGB -alpha on -type TrueColorAlpha -background none \
              -crop ${TILE}x${TILE} \
              -set filename:tile "%[fx:floor(page.y/${TILE})],%[fx:floor(page.x/${TILE})]" \
              +repage -gravity northwest -extent ${TILE}x${TILE} \
              +adjoin "$out/%[filename:tile].png"
          done

      - name: List sample tiles
        run: |
          find "$TILE_DIR" -type f | sort | head -n 30

      # Optional: zip per-Z to keep artifact file counts sane
      - name: Package tiles per Z (optional)
        run: |
          set -eux
          cd "$TILE_DIR"
          for z in z*; do [ -d "$z" ] && zip -qr "${z}.zip" "$z"; done
          ls -lh *.zip || true

      - name: Upload tiles
        uses: actions/upload-artifact@v4
        with:
          name: aurora-tiles-${{ github.sha }}
          path: |
            data/tiles/**/*.png
            data/tiles/*.zip
          if-no-files-found: error
